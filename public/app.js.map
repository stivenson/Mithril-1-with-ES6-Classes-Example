{"version":3,"sources":["app/components/dashboard/clients.js","app/config.js","app/containers/dashboard/dashboard.js","app/initialize.js","app/layouts/MainLayout/MainLayout.js","app/localstorage-polyfill.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA","file":"public/app.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _mithril = require('mithril');\n\nvar _mithril2 = _interopRequireDefault(_mithril);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DashboardClients = function () {\n    function DashboardClients(p) {\n        _classCallCheck(this, DashboardClients);\n\n        console.log('DashboardClients constructor');\n        this.name = 'Stivenson';\n    }\n\n    _createClass(DashboardClients, [{\n        key: 'view',\n        value: function view() {\n            console.log('DashboardClients view');\n            return (0, _mithril2.default)('div', { class: 'dashboard-clients' }, 'Hello, this is a Component implementation of Mithril 1 and ES6 Classes (inside Container). Att ' + this.name);\n        }\n    }, {\n        key: 'oncreate',\n        value: function oncreate() {\n            console.log('A Component was created');\n        }\n    }]);\n\n    return DashboardClients;\n}();\n\nexports.default = DashboardClients;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar Config = exports.Config = {\n\tAPI_URL: 'xxxxxxxxxx'\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _mithril = require('mithril');\n\nvar _mithril2 = _interopRequireDefault(_mithril);\n\nvar _clients = require('../../components/dashboard/clients');\n\nvar _clients2 = _interopRequireDefault(_clients);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Dashboard = function () {\n    function Dashboard(p) {\n        _classCallCheck(this, Dashboard);\n\n        console.log('Dashboard constructor');\n        this.theBetter = 'Mithril';\n    }\n\n    _createClass(Dashboard, [{\n        key: 'view',\n        value: function view() {\n            console.log('Dashboard view');\n            return (0, _mithril2.default)('div', { class: 'dashboard' }, ['Hello, this is a Container implementation of ' + this.theBetter + ' 1 and ES6 Classes.', (0, _mithril2.default)('br'), (0, _mithril2.default)(_clients2.default)]);\n        }\n    }, {\n        key: 'oncreate',\n        value: function oncreate() {\n            console.log('A Container (component) was created');\n        }\n    }]);\n\n    return Dashboard;\n}();\n\nexports.default = Dashboard;\n","'use strict';\n\nrequire('localstorage-polyfill');\n\nvar _mithril = require('mithril');\n\nvar _mithril2 = _interopRequireDefault(_mithril);\n\nvar _dashboard = require('containers/dashboard/dashboard');\n\nvar _dashboard2 = _interopRequireDefault(_dashboard);\n\nvar _MainLayout = require('layouts/MainLayout/MainLayout');\n\nvar _MainLayout2 = _interopRequireDefault(_MainLayout);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    var root = document.getElementById('app');\n    localStorage.setItem('user', true); // Hypothetical control variable in the localstorage\n\n    _mithril2.default.route.mode = 'hash';\n\n    var paramsMainLayout = { children: (0, _mithril2.default)(_dashboard2.default) };\n\n    _mithril2.default.route(root, '/', {\n        '/': new _MainLayout2.default(paramsMainLayout)\n    });\n});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _mithril = require('mithril');\n\nvar _mithril2 = _interopRequireDefault(_mithril);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MainLayout = function () {\n  function MainLayout(p) {\n    _classCallCheck(this, MainLayout);\n\n    console.log('MainLayout Constructor');\n    this.children = p.children;\n  }\n\n  _createClass(MainLayout, [{\n    key: 'logout',\n    value: function logout() {\n      // Hypothetical logout (simple example of variable)\n      alert('This is a called to class method');\n      console.log('logout');\n      _mithril2.default.route('/');\n    }\n  }, {\n    key: 'existUser',\n    value: function existUser() {\n      return localStorage.getItem('user') != 'false'; // Hypothetical control variable in the localstorage\n    }\n  }, {\n    key: 'view',\n    value: function view() {\n      console.log('MainLayout View');\n      return (0, _mithril2.default)('div', { class: \"MainLayout\" }, (0, _mithril2.default)('div', { class: \"text-center \" + (this.existUser.bind(this) ? \"\" : \"hidden\") }, [(0, _mithril2.default)('a', { onclick: this.logout.bind(this) }, [(0, _mithril2.default)('span', { class: 'pt-icon-standard pt-icon-cross' }), 'This is a simple link']), (0, _mithril2.default)('br'), this.children]));\n    }\n  }, {\n    key: 'oncreate',\n    value: function oncreate() {\n      console.log('A Layout (component) was created');\n    }\n  }]);\n\n  return MainLayout;\n}();\n\nexports.default = MainLayout;\n","'use strict';\n\n// I mean, seriously, localStorage is supported even by your mum. How about instead of\n// casing the feature out, you give users in-memory (stale) storage instead?\n// If they close your application, they deserve to lose data anyway.\n\nif (!('localStorage' in window)) {\n    window.localStorage = {\n        _data: {},\n        setItem: function setItem(id, val) {\n            return this._data[id] = String(val);\n        },\n        getItem: function getItem(id) {\n            return this._data.hasOwnProperty(id) ? this._data[id] : undefined;\n        },\n        removeItem: function removeItem(id) {\n            return delete this._data[id];\n        },\n        clear: function clear() {\n            return this._data = {};\n        }\n    };\n}\n"]}